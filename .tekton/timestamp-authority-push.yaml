apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/securesign/timestamp-authority?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "push" && target_branch == "main" && (".tekton/timestamp-authority-push.yaml".pathChanged() || "cmd/timestamp-server".pathChanged() || "pkg".pathChanged() || "Makefile".pathChanged() || "Dockerfile.tsa.rh".pathChanged() || "go.mod".pathChanged() || "go.sum".pathChanged() )
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: timestamp-authority
    appstudio.openshift.io/component: timestamp-authority
    pipelines.appstudio.openshift.io/type: build
  name: timestamp-authority-on-push
  namespace: rhtas-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/securesign/timestamp-authority:{{revision}}
  - name: dockerfile
    value: Dockerfile.tsa.rh
  - name: build-source-image
    value: "true"
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: [{"path": ".", "type": "gomod"}, {"path": "./hack/tools", "type": "gomod"}]
  - name: go_unit_test
    value: true
  - name: go_test_command
    value: |
      CGO_ENABLED=0 go build -trimpath -o bin/timestamp-cli ./cmd/timestamp-cli
      CGO_ENABLED=0 go build -trimpath -o bin/timestamp-server ./cmd/timestamp-server
      go test ./...
  pipelineRef:
    resolver: git
    params:
      - name: url
        value: 'https://github.com/securesign/pipelines.git'
      - name: revision
        value: 'main'
      - name: pathInRepo
        value: 'pipelines/docker-build-oci-ta.yaml'
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
